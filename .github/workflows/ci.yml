name: CI

on:
  push:
    branches: [ dev, main ]
  pull_request:
    branches: [ dev, main ]

  workflow_dispatch:

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: npm
          cache-dependency-path: koekalenteri-backend/package-lock.json
      - name: Install packages
        run: npm ci
        working-directory: koekalenteri-backend
      - name: Lint
        run: npm run lint
        working-directory: koekalenteri-backend
      - name: Build
        run: npm run build
        working-directory: koekalenteri-backend
      - name: Test
        run: npm run test -- --coverage
        working-directory: koekalenteri-backend
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: backend-coverage
          path: koekalenteri-backend/coverage/lcov.info

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: npm
          cache-dependency-path: koekalenteri-frontend/package-lock.json
      - name: Cache node_modules
        id: cache
        uses: actions/cache@v3
        with:
          path: koekalenteri-frontend/node_modules
          key: ${{ runner.os }}-${{ hashFiles('koekalenteri-frontend/package-lock.json') }}
      - name: Install packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
        working-directory: koekalenteri-frontend
      - name: Lint
        run: npm run lint
        working-directory: koekalenteri-frontend
      - name: Build
        run: npm run build
        working-directory: koekalenteri-frontend
      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: koekalenteri-frontend/build/

  frontend-test:
    runs-on: ubuntu-latest
    needs: [frontend]
    strategy:
      matrix:
        shard: [1, 2, 3, 4]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: npm
          cache-dependency-path: koekalenteri-frontend/package-lock.json
      - name: Restore node_modules
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: koekalenteri-frontend/node_modules
          key: ${{ runner.os }}-${{ hashFiles('koekalenteri-frontend/package-lock.json') }}
      - name: Download frontend build
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: koekalenteri-frontend/build
      - name: Test
        run: npm run test -- --coverage --shard=${{ matrix.shard }}/${{ strategy.job-total }}
        working-directory: koekalenteri-frontend
      - name: Rename coverage
        run: mv koekalenteri-frontend/coverage/lcov.info koekalenteri-frontend/coverage/lcov${{ matrix.shard }}.info
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: frontend-coverage
          path: koekalenteri-frontend/coverage/lcov${{ matrix.shard }}.info

  sonar:
    runs-on: ubuntu-latest
    needs: [backend, frontend-test]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis (SonarCloud)
      - uses: actions/setup-node@v3
        with:
          cache: npm
          cache-dependency-path: koekalenteri-frontend/package-lock.json
      - name: Restore node_modules
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: koekalenteri-frontend/node_modules
          key: ${{ runner.os }}-${{ hashFiles('koekalenteri-frontend/package-lock.json') }}
      - name: Download backend coverage
        uses: actions/download-artifact@v3
        with:
          name: backend-coverage
          path: koekalenteri-backend/coverage/lcov.info
      - name: Download frontend coverage
        uses: actions/download-artifact@v3
        with:
          name: frontend-coverage
          path: koekalenteri-frontend/coverage
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
